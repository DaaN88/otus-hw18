version: "3.8"

services:
  app-hw18:
    image: "ghcr.io/daan88/otus-hw18:latest"
    container_name: otus-hw18
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - project:/project
      - .env:/project/src/.env
      - ./docker-settings/php/app.ini:/usr/local/etc/php/conf.d/app.ini
    networks:
      - otus
    pull_policy: always

  nginx-hw18:
    image: nginx:alpine
    container_name: nginx-hw18
    restart: unless-stopped
    ports:
      - '8080:80'
      - '443:443'
    volumes:
      - project:/project
      - ./docker-settings/nginx:/etc/nginx/conf.d/
    networks:
      - otus

  db-hw18:
    image: mysql:8.0.28
    container_name: db-hw18
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-settings/mysql/conf:/etc/mysql/conf.d
    networks:
      - otus

  phpmyadminer-hw18:
    image: adminer:standalone
    container_name: phpmyadminer-hw18
    ports:
      - '9991:8080'
    depends_on:
      - db-hw18
    networks:
      - otus

  rabbitmq-hw18:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-hw18
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    networks:
      - otus
      
volumes:
  project:
  rabbitmq_data:
  rabbitmq_log:

networks:
  otus:
    driver: bridge
