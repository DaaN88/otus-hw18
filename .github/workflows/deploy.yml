name: "Otus hw18"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  clone_project:
    runs-on: ubuntu-latest
    environment: env
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        
      - name: Login to GitHub Container Registry
        id: login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ vars.REGISTRY }}/${{ github.repository }}
          flavor: |
            latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Upload docker-compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          source: "docker-compose.yml"
          target: ${{ secrets.PROJECT_FOLDER }}
          overwrite: true
      
      - name: Run command on remote server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: |
            GHCR_USERNAME,
            GHCR_PAT,
            APP_NAME,
            APP_ENV,
            APP_KEY,
            APP_DOWN,
            APP_DEBUG,
            APP_URL,
            DB_CONNECTION,
            DB_HOST,
            DB_PORT,
            DB_DATABASE,
            DB_USERNAME,
            DB_PASSWORD,
            DB_CHARSET,
            DB_COLLATION,
            PROD_SERVER,
            PROD_PORT,
            PROD_USER,
            SERVER_NAME,
            SERVER_PORT,
            SERVER_USER,
            SERVER_PASSWORD,
            APPLICATION_DIR,
            APPLICATION_PATH,
            RABBITMQ_HOST,
            RABBITMQ_PORT,
            RABBITMQ_USERNAME,
            RABBITMQ_PASSWORD,
            RABBITMQ_EXCHANGE,
            RABBITMQ_EXCHANGE_TYPE,
            QUEUE_NAME,
            QUEUE_ROUTING_KEY
          script: |
            cd ${{ secrets.PROJECT_FOLDER }}
            echo ${GHCR_PAT} | docker login ghcr.io -u ${GHCR_USERNAME} --password-stdin
            docker-compose down
            docker-compose -p 'otus-hw18' up -d
            docker logout
        env:
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          GHCR_PAT: ${{ secrets.GIT_DOCKER_TOKEN }}
          APP_NAME: ${{ vars.APP_NAME }}
          APP_ENV: ${{ vars.APP_ENV }}
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_DOWN: ${{ vars.APP_DOWN }}
          APP_DEBUG: ${{ vars.APP_DEBUG }}
          APP_URL: ${{ vars.APP_URL }}
          DB_CONNECTION: ${{ vars.APP_DB_CONNECTION }}
          DB_HOST: ${{ vars.APP_DB_HOST }}
          DB_PORT: ${{ vars.APP_DB_PORT }}
          DB_DATABASE: ${{ secrets.APP_DB_DATABASE }}
          DB_USERNAME: ${{ secrets.APP_DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.APP_DB_PASSWORD }}
          DB_CHARSET: ${{ vars.APP_DB_CHARSET }}
          DB_COLLATION: ${{ vars.APP_DB_COLLATION }}
          PROD_SERVER: ${{ secrets.APP_PROD_SERVER }}
          PROD_PORT: ${{ secrets.APP_PROD_PORT }}
          PROD_USER: ${{ secrets.APP_PROD_USER }}
          SERVER_NAME: ${{ secrets.APP_SERVER_NAME }}
          SERVER_PORT: ${{ secrets.APP_SERVER_PORT }}
          SERVER_USER: ${{ vars.APP_SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.APP_SERVER_PASSWORD }}
          APPLICATION_DIR: ${{ secrets.APP_APPLICATION_DIR }}
          APPLICATION_PATH: ${{ secrets.APP_APPLICATION_PATH }}
          RABBITMQ_HOST: ${{ vars.APP_RABBITMQ_HOST }}
          RABBITMQ_PORT: ${{ vars.APP_RABBITMQ_PORT }}
          RABBITMQ_USERNAME: ${{ secrets.APP_RABBITMQ_USERNAME }}
          RABBITMQ_PASSWORD: ${{ secrets.APP_RABBITMQ_PASSWORD }}
          RABBITMQ_EXCHANGE: ${{ vars.APP_RABBITMQ_EXCHANGE }}
          RABBITMQ_EXCHANGE_TYPE: ${{ vars.APP_RABBITMQ_EXCHANGE_TYPE }}
          QUEUE_NAME: ${{ vars.APP_QUEUE_NAME }}
          QUEUE_ROUTING_KEY: ${{ vars.APP_QUEUE_ROUTING_KEY }}
